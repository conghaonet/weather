def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28
    //@Parcelize 注解需要设置：experimental = true
    androidExtensions {
        experimental = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.app2m.weather"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    if (localProperties.getProperty('key.storeFile') != null) {
        signingConfigs {
            app2m {
                storeFile file(localProperties.getProperty('key.storeFile'))
                storePassword localProperties.getProperty('key.storePassword')
                keyAlias localProperties.getProperty('key.keyAlias')
                keyPassword localProperties.getProperty('key.keyPassword')
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            if (localProperties.getProperty('key.storeFile') != null) {
                signingConfig signingConfigs.app2m
            }
        }
        release {
            minifyEnabled false
            if (localProperties.getProperty('key.storeFile') != null) {
                signingConfig signingConfigs.app2m
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    //高德定位
    implementation "com.amap.api:location:4.6.0"
    implementation 'com.google.code.gson:gson:2.8.5'
}
